# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17.0]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: npm install
        run: npm ci
      - name: create env file
        run: |
          touch .env
          echo GRAPHQL_PORT=${{ vars.GRAPHQL_PORT }} >> .env
          echo HOSTNAME=${{ vars.HOSTNAME }} >> .env
          echo MONGO_URL_CLIENT=${{ vars.MONGO_URL_CLIENT }} >> .env
          echo DB_NAME=${{ vars.DB_NAME }} >> .env
          echo DB_USERNAME=${{ vars.DB_USERNAME }} >> .env
          echo DB_HOST=${{ vars.DB_HOST }} >> .env
          echo DB_PASSWORD=${{ vars.DB_PASSWORD }} >> .env
          echo DB_PORT=${{ vars.DB_PORT }} >> .env
          echo PORT=${{ vars.PORT }} >> .env
          echo JWTSECRET=${{ secrets.JWTSECRET }} >> .env
          echo JWTKEY=${{ secrets.JWTKEY }} >> .env
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true
      - name: np build
        run: npm run build --if-present
      - name: npm test
        run: npm test
