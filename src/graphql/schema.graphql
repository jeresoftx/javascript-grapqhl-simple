scalar DateTime
scalar EmailAddress
scalar PhoneNumber
scalar PositiveInt
scalar JSON
scalar NonEmptyString

type User {
  id: ID!
  name: String!
  lastName: String!
  fullName: String!
  emails: [Email!]!
  phones: [Phone!]!
  lastConnected: DateTime
  createdAt: DateTime!
  updateAt: DateTime!
}

type Email {
  email: EmailAddress!
  main: Boolean!
}

type Phone {
  email: PhoneNumber!
  main: Boolean!
}
input paramsInput {
  offset: PositiveInt
  limit: PositiveInt
  sort: JSON
  filter: JSON
}
input emailInput {
  email: EmailAddress!
  main: Boolean!
}
input phoneInput {
  phone: PhoneNumber!
  main: Boolean!
}

type Query {
  "retrun the version of the graphql system"
  version: String!

  "User lists"
  users(params: paramsInput!): [User!]!
  "User lists"
  user(id: ID!): User
}

type Mutation {
  addUser(
    name: NonEmptyString!
    lastName: NonEmptyString!
    username: NonEmptyString!
    email: EmailAddress!
    phone: PhoneNumber!
    password: String!
  ): User!

  deleteUser(id: ID!): Boolean!

  updateUser(name: NonEmptyString!, lastName: NonEmptyString!): User!
}
